(()=>{"use strict";var e={100:(e,t,A)=>{A.d(t,{A:()=>C});var n=A(354),o=A.n(n),r=A(314),a=A.n(r),d=A(417),i=A.n(d),c=new URL(A(246),A.b),l=a()(o());l.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap);"]);var s=i()(c);l.push([e.id,`*{font-family:"Inter",sans-serif}.btn{border-radius:.75rem;padding:.5rem 1rem;text-align:center;display:flex;align-items:center;justify-content:center;cursor:pointer;font-size:1rem;font-weight:500;line-height:1.5rem}.btn.btn-primary{border:0;color:#fff;background:#6b3c9b}.btn.btn-primary:hover{background:#844dba}.btn.btn-primary:active{background:#5b2f87}.btn.btn-secondary{color:#1b1c1e;background:#fff;border:1px solid #bcbcbd}.btn.btn-secondary:hover{background:#e7e7e7}.btn.btn-secondary:active{background:#bdbdbd}.text-field{border-radius:.75rem;padding:.5rem 1rem;background:#eeeff0;border:0;font-size:1rem;line-height:1.5rem}.text-field:hover{background-color:#dcdee0}.text-field:focus{background-color:#fff}.text-field::placeholder{color:#5b5c5e;line-height:1.6rem}.btn.btn-cancel{color:#0f75b8;background:rgba(0,0,0,0);border:0;border-radius:0;font-size:.875rem;line-height:1.4875rem;font-weight:400;padding:.5rem .75rem}.btn.btn-cancel:hover{font-weight:500;text-decoration:underline;text-underline-offset:.375rem}*,*::after,*::before{box-sizing:border-box;padding:0;margin:0}.btn-scroll{display:flex;align-items:center;border:0;background:rgba(0,0,0,0);cursor:pointer;gap:.5rem;padding:1rem 1rem 0}.btn-scroll>h1{font-weight:500;font-size:1.25rem;line-height:1.875rem}.search{padding:0 1rem;margin-bottom:.5rem}.search-input{width:100%;margin-top:1.5rem;background-image:url(${s});background-repeat:no-repeat;background-position:.75rem 50%;padding:.5rem .75rem .5rem 3rem}.container{margin-top:1.5rem;display:flex;flex-direction:column;align-items:center;height:calc(100dvh - 150px);gap:1rem;overflow-y:auto}.details-wrapper{padding:0 1rem;display:flex;flex-direction:column;align-items:center}.details{margin-top:2.3125rem;padding:0 1.25rem;display:flex;flex-direction:column;align-items:center;gap:.75rem;text-align:center}.information{height:4rem}.details-wrapper>.details>.heading{font-weight:500;font-size:1.25rem;line-height:1.875rem}.details-wrapper>.details>.description{font-weight:400;font-size:1rem;line-height:1.6rem}.details-wrapper>.add-note{margin-top:1.5rem;gap:.5rem;font-weight:500}.add-note-primary{width:calc(100% - 2rem);margin:0 1rem}.note-tile{background:#fff;border-radius:.75rem;box-shadow:0px 4px 16px 0px rgba(0,0,0,.0705882353);width:calc(100% - 2rem);gap:.75rem;display:flex;flex-direction:column;padding:.75rem}.note-header{display:flex;align-items:center;justify-content:space-between}.note-tile:first-of-type{margin-top:.5rem}.note-header>.note-title{font-weight:500;font-size:.875rem;line-height:1.4875rem;color:#1b1c1e}.note-header>.actions{gap:.5rem;display:flex}.note-header>.actions>.action-btn{background:rgba(0,0,0,0);border:0;cursor:pointer}.note-body{font-size:.875rem;line-height:1.4875rem;color:#3b3c3e}.note-body>p{overflow-wrap:break-word;text-wrap:wrap}.note-footer{font-size:.75rem;line-height:.975rem;color:#5b5c5e}.modal{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:calc(100% - 32px);border:0;background:#fff;padding:1.5rem;border-radius:1rem;max-width:620px}.modal>.modal-container{display:flex;flex-direction:column;gap:1.5rem}.modal-heading{font-weight:500;font-size:1.25rem;line-height:1.875rem}.modal-body{font-weight:400;line-height:1.6rem}.modal-footer{display:flex;justify-content:space-between;gap:1rem}.modal-action-btn{width:50%}dialog::backdrop{background-color:rgba(0,0,0,.3019607843)}.add-new-note-container,.edit-note-container{padding:1.25rem 1rem;width:100%;display:flex;flex-direction:column;gap:1rem;box-shadow:0px 0px 16px 0px rgba(0,0,0,.0784313725);border-width:1px 0px 1px 0px;border-style:solid;border-color:#eeeff0}.add-new-note-heading,.edit-note-heading{display:flex;align-items:center;justify-content:space-between}.add-new-note-heading>h2,.edit-note-heading>h2{font-weight:500;font-size:1rem;line-height:1.6rem}.add-new-note-body,.edit-note-body{display:flex;flex-direction:column;gap:1rem;position:relative}.add-new-note.btn.btn-primary,.edit-note.btn.btn-primary{position:absolute;bottom:1rem;right:1rem}.note-body-textarea{resize:vertical;min-height:210px}.note-tile.note-edit-mode{width:100%;padding:0}input[disabled]{cursor:not-allowed}.hide{display:none}`,"",{version:3,sources:["webpack://./src/styles/_typography.scss","webpack://./src/styles/_design.scss","webpack://./src/styles.scss"],names:[],mappings:"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",sourceRoot:""}]);const C=l},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var A="",n=void 0!==t[5];return t[4]&&(A+="@supports (".concat(t[4],") {")),t[2]&&(A+="@media ".concat(t[2]," {")),n&&(A+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),A+=e(t),n&&(A+="}"),t[2]&&(A+="}"),t[4]&&(A+="}"),A})).join("")},t.i=function(e,A,n,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(n)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);n&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),A&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=A):l[2]=A),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var t=e[1],A=e[3];if(!A)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),r="/*# ".concat(o," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function A(e){for(var A=-1,n=0;n<t.length;n++)if(t[n].identifier===e){A=n;break}return A}function n(e,n){for(var r={},a=[],d=0;d<e.length;d++){var i=e[d],c=n.base?i[0]+n.base:i[0],l=r[c]||0,s="".concat(c," ").concat(l);r[c]=l+1;var C=A(s),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==C)t[C].references++,t[C].updater(p);else{var m=o(p,n);n.byIndex=d,t.splice(d,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function o(e,t){var A=t.domAPI(t);return A.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;A.update(e=t)}else A.remove()}}e.exports=function(e,o){var r=n(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var d=A(r[a]);t[d].references--}for(var i=n(e,o),c=0;c<r.length;c++){var l=A(r[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=i}}},659:e=>{var t={};e.exports=function(e,A){var n=function(e){if(void 0===t[e]){var A=document.querySelector(e);if(window.HTMLIFrameElement&&A instanceof window.HTMLIFrameElement)try{A=A.contentDocument.head}catch(e){A=null}t[e]=A}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(A)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,A)=>{e.exports=function(e){var t=A.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(A){!function(e,t,A){var n="";A.supports&&(n+="@supports (".concat(A.supports,") {")),A.media&&(n+="@media ".concat(A.media," {"));var o=void 0!==A.layer;o&&(n+="@layer".concat(A.layer.length>0?" ".concat(A.layer):""," {")),n+=A.css,o&&(n+="}"),A.media&&(n+="}"),A.supports&&(n+="}");var r=A.sourceMap;r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,A)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},322:(e,t,A)=>{e.exports=A.p+"a6885dadfe803bb665f3.svg"},988:(e,t,A)=>{e.exports=A.p+"d285bc69c2a2bd43a5b0.svg"},294:(e,t,A)=>{e.exports=A.p+"4364ca1ecf5bc4a26775.svg"},994:(e,t,A)=>{e.exports=A.p+"d46ebef9c242d5e49737.svg"},346:(e,t,A)=>{e.exports=A.p+"02d6fee105b7817f0579.svg"},246:(e,t,A)=>{e.exports=A.p+"9e3950427ed88a91c6ee.svg"}},t={};function A(n){var o=t[n];if(void 0!==o)return o.exports;var r=t[n]={id:n,exports:{}};return e[n](r,r.exports,A),r.exports}A.m=e,A.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return A.d(t,{a:t}),t},A.d=(e,t)=>{for(var n in t)A.o(t,n)&&!A.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},A.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),A.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;A.g.importScripts&&(e=A.g.location+"");var t=A.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),A.p=e})(),A.b=document.baseURI||self.location.href,A.nc=void 0;var n=A(72),o=A.n(n),r=A(825),a=A.n(r),d=A(659),i=A.n(d),c=A(56),l=A.n(c),s=A(540),C=A.n(s),p=A(113),m=A.n(p),u=A(100),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=i().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=C(),o()(u.A,g),u.A&&u.A.locals&&u.A.locals;const h={0:"January",1:"February",2:"March",3:"April",4:"May",5:"June",6:"July",7:"August",8:"September",9:"October",10:"November",11:"December"},f=()=>Array.from(document.querySelectorAll(".note-tile")),b=e=>e.getAttribute("data-id")||e.parentElement.getAttribute("data-id"),y=e=>document.querySelector(`.note-tile[data-id="${e}"]`),E=e=>({title:document.getElementById("note-title-"+e).textContent||"",body:document.getElementById("note-body-"+e).textContent||""}),B=()=>document.getElementById("container"),v=()=>{const e=new Date;return`${h[e.getMonth()]} ${e.getDate()}`};let x=0;const w=()=>{const e=N("add-new-note-container"),t=S("add-new-note-heading"),A=U({textContent:"Add new note"}),n=Y({className:"btn btn-cancel",textContent:"Cancel",id:"add-note-cancel"});t.appendChild(A),t.appendChild(n);const o=S("add-new-note-body"),r=G({className:"text-field",id:"note-title",placeholder:"Untitled Note"}),a=L({className:"text-field note-body-textarea",id:"note-body",placeholder:"Your note..."}),d=Y({className:"btn btn-primary add-new-note",textContent:"Add",id:"add-new-note"});return o.appendChild(r),o.appendChild(a),o.appendChild(d),e.appendChild(t),e.appendChild(o),e},k=()=>{const e=S("details-wrapper"),t=S("details");[q({src:A(988),loading:"eager",alt:"Information circle",className:"information"}),U({textContent:"No notes yet",className:"heading"}),z({type:"p",textContent:"Add a note to keep track of your learnings.",className:"description"})].forEach((e=>t.appendChild(e)));const n=Y({className:"btn btn-secondary add-note",id:"add-note"}),o=q({src:A(994),alt:"",loading:"eager"}),r=z({type:"span",textContent:"Add Note"});return n.appendChild(o),n.appendChild(r),e.appendChild(t),e.appendChild(n),e},F=e=>{const{title:t,body:A,id:n}=e,o=y(n);return Array.from(o.children).forEach((e=>e.remove())),[M(t,n),T(A,n),j()].forEach((e=>o.appendChild(e))),o},I=()=>Y({className:"btn btn-primary add-note-primary",id:"add-new-note-primary",textContent:"Add New"}),N=e=>{const t=document.createElement("section");return t.className=e,t},S=e=>{const t=document.createElement("div");return t.className=e,t},G=e=>{const t=document.createElement("input");return t.className=e.className,t.id=e.id,t.placeholder=e.placeholder,t.value=e.value||"",t},L=e=>{const t=document.createElement("textarea");return t.className=e.className,t.id=e.id,t.placeholder=e.placeholder,t.value=e.value||"",t},Y=e=>{const t=document.createElement("button");return t.className=e.className,t.textContent=e.textContent||"",t.id=e.id,t.setAttribute("data-id",e["data-id"]||""),t},U=e=>{const t=document.createElement(e.heading||"h2");return t.textContent=e.textContent,t.className=e.className||"",t.id=e.id||"",t},q=e=>{const t=document.createElement("img");return t.src=e.src,t.loading=e.loading,t.alt=e.alt,t},z=e=>{const t=document.createElement(e.type);return t.textContent=e.textContent,t.className=e.className||"",t.id=e.id||"",t},M=(e,t)=>{const n=S("note-header"),o=U({className:"note-title",textContent:e,id:"note-title-"+t}),r=S("actions"),a=Y({className:"action-btn edit-action",id:"edit-note-"+t,"data-id":t}),d=q({alt:"Edit note",loading:"lazy",src:A(322)});a.appendChild(d);const i=Y({className:"action-btn remove-action",id:"remove-note-"+t,"data-id":t}),c=q({alt:"Remove note",loading:"lazy",src:A(346)});return i.appendChild(c),r.appendChild(a),r.appendChild(i),n.appendChild(o),n.appendChild(r),n},T=(e,t)=>{const A=S("note-body"),n=z({type:"p",textContent:e,id:"note-body-"+t});return A.appendChild(n),A},j=()=>{const e=S("note-footer"),t=z({type:"p",textContent:v()});return e.appendChild(t),e},Q=()=>{document.getElementById("add-note").addEventListener("click",H)},R=()=>{document.getElementById("add-note-cancel").addEventListener("click",K)},D=()=>{document.getElementById("add-new-note").addEventListener("click",X)},O=()=>{document.getElementById("add-new-note-primary").addEventListener("click",Z)},$=e=>{document.getElementById("edit-note-"+e).addEventListener("click",(e=>W(e)))},P=e=>{document.getElementById("remove-note-"+e).addEventListener("click",(e=>_(e)))},W=e=>{const t=e.target,A=b(t),n=y(A),{title:o,body:r}=E(A),a=(e=>{const{id:t,title:A,body:n}=e,o=N("edit-note-container"),r=S("edit-note-heading"),a=U({heading:"h2",textContent:"Edit note"}),d=Y({className:"btn btn-cancel",id:"edit-note-cancel-btn-"+t,"data-id":t,textContent:"Cancel"});r.appendChild(a),r.appendChild(d);const i=S("edit-note-body");return[G({className:"text-field",id:"edit-note-title-"+t,placeholder:"Untitlted Note",value:A}),L({className:"text-field note-body-textarea",id:"edit-note-body-"+t,placeholder:"Your note...",value:n}),Y({className:"btn btn-primary edit-note",id:"edit-note-btn-"+t,"data-id":t,textContent:"Edit"})].forEach((e=>i.appendChild(e))),o.appendChild(r),o.appendChild(i),o})({id:A,title:o,body:r});n.classList.add("note-edit-mode"),n.replaceChildren(a),(e=>{const{id:t}=e;document.getElementById("edit-note-cancel-btn-"+t).addEventListener("click",(()=>te(e)))})({id:A,title:o,body:r}),(e=>{document.getElementById("edit-note-btn-"+e).addEventListener("click",(()=>ee(e)))})(A)},_=e=>{const t=e.target,A=b(t);document.getElementById("modal").showModal(),(e=>{document.getElementById("modal-remove").addEventListener("click",(()=>Ae(e)))})(A),J()},J=()=>{document.getElementById("modal-cancel").addEventListener("click",ne)},H=()=>{const e=w();B().replaceChildren(e),R(),D()},K=()=>{if(f().length)return void V();const e=k(),t=document.getElementById("container");t?.replaceChildren(e),Q()},V=()=>{const e=I(),t=B();t.firstChild.remove(),t.prepend(e),O()},X=()=>{{const e=((e,t)=>{const A=N("note-tile");return A.setAttribute("data-id",x.toString()),[M(e,x.toString()),T(t,x.toString()),j()].forEach((e=>A.appendChild(e))),x++,A})(document.getElementById("note-title").value,document.getElementById("note-body").value),t=document.getElementById("container"),A=I(),n=f(),o=e.getAttribute("data-id");if(oe("enable"),n.length)return t.firstChild.remove(),t.prepend(A),t.appendChild(e),$(o),P(o),void O();t.replaceChildren(A,e),$(o),P(o),O()}},Z=()=>{const e=document.getElementById("add-new-note-primary"),t=w(),A=document.getElementById("container");e.remove(),A.prepend(t),R(),D()},ee=e=>{y(e).classList.remove("note-edit-mode"),(e=>{const t=document.getElementById("edit-note-title-"+e).value,A=document.getElementById("edit-note-body-"+e).value;F({id:e,title:t,body:A})})(e),$(e),P(e)},te=e=>{const{id:t}=e;y(t).classList.remove("note-edit-mode"),F(e),$(t),P(t)},Ae=e=>{const t=document.getElementById("modal");if(y(e)?.remove(),t.close(),!f().length){const e=document.getElementById("container"),t=k();return e.replaceChildren(t),oe("disable"),void Q()}const A=document.getElementById("search-notes").value;re(A)},ne=()=>{document.getElementById("modal").close()},oe=e=>{const t=document.getElementById("search-notes");"enable"===e?t.removeAttribute("disabled"):(t.value="",t.setAttribute("disabled","true"))},re=e=>{const t=f();e||t.forEach((e=>{e.classList.remove("hide")}));const n=t.filter((t=>{const A=t.getAttribute("data-id"),n=E(A);return n.body.includes(e)||n.title.includes(e)})).map((e=>e.getAttribute("data-id"))),o=document.getElementById("no-results");if(!n.length&&!o){const e=(()=>{const e=N("no-results");e.id="no-results";const t=S("details");return[q({src:A(294),loading:"lazy",alt:"Sad emoji",className:"information"}),U({textContent:"We could not find any matching results",className:"heading"}),z({type:"p",textContent:"Looks like you don't have a note with title or body matching your phrase. Try to rephrase or create a new note.",className:"description"})].forEach((e=>t.appendChild(e))),e.appendChild(t),e})();B().appendChild(e)}o&&n.length&&o.remove(),t.forEach((e=>{n.includes(e.getAttribute("data-id"))?e.classList.remove("hide"):e.classList.add("hide")}))};Q(),(()=>{const e=document.getElementById("search-notes");e.addEventListener("input",(()=>re(e.value)))})(),document.getElementById("scroll-up").addEventListener("click",(()=>{B().scrollTo({behavior:"smooth",top:0})}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,